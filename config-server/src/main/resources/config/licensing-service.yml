server:
  port: 8082

example:
  property: I AM THE DEFAULT

spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb
    username: sa
    password:
  h2:
    console:
      enabled: true
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true

management:
  health:
    circuitbreaker:
      enabled: true
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true

eureka:
  instance:
    # 서비스 이름 대신 서비스 IP 주소 등록
    preferIpAddress: true
  client:
    # 유레카 서비스 등록 여부
    registerWithEureka: true
    # 레지스트리 사본을 로컬에 내려받기
    fetchRegistry: true
    # 유레카 서비스의 위치 설정
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

resilience4j:
  circuitbreaker:
    instances:
      licenseService:
        register-health-indicator: true
        ring-buffer-size-in-closed-state: 5
        ring-buffer-size-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 20
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException

  bulkhead:
    instances:
      bulkheadLicenseService:
        max-wait-duration: 10ms
        max-concurrent-calls: 20

  thread-pool-bulkhead:
    instances:
      bulkheadLicenseService:
        max-thread-pool-size: 1
        core-thread-pool-size: 1
        queue-capacity: 1
        keep-alive-duration: 20ms

  retry:
    instances:
      retryLicenseService:
        max-retry-attempts: 2
        wait-duration: 5000
        retry-exceptions:
          - java.util.concurrent.TimeoutException

  ratelimiter:
    linstances:
      licenseService:
        timeout-duration: 1000ms
        limit-refresh-period: 5000
        limit-for-period: 5